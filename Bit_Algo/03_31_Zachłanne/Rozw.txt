Zadanie 1
W problemie tankowania paliwa nasz pojazd musi przemieścić się z punktu 0 do punktu F, a po drodze ma stacje do tankowania paliwa si, przy czym 0 < s1 < s2 < ... < sn < F. Każda stacja jest identyfikowana przez jej odległość od punktu 0, tzn. si to odległość pomiędzy i-tą stacją a puntem 0. Pojazd potrafi przejechać odległość d bez potrzeby tankowania.Podaj algorytm, który obliczy, na ilu minimalnie stacjach musi zatrzymać się pojazd na drodze od punktu 0 do punktu F. Uwaga: jeżeli zdarzy się, że odległość d jest zbyt mała, żeby dojechać do kolejnej stacji, to należy zwrócić wartość None.

Trzeba sie cofac na jeden jak przekroczy d i brać tą stację. I to bedzie dzialalo, bo:
Bo to najwieksza odleglosc ktorą może przejechac ktora jest <=d.
Trzeba pojechac jak najdalej bo inaczej marnujemy paliwo.

Zadanie 2
W problemie coin change mamy daną kwotę X i chcemy ją rozmienić na monety o wartości 1, 5, 10, 25 i 
100. Podaj algorytm, który obliczy, ile minimalnie monet trzeba użyć do wydania reszty oraz ile sztuk każdej monety będzie trzeba użyć. Można założyć, że każdej monety mamy nieskończenie wiele sztuk.
Rozw:
russian inerpretation xD:
1)	Берем наибольшие монеты пока не перевалит за сумму, если не получилось, значит набор монет не правильный (В требуемом нами poprzednie monety to dzielniki jednej z następnych oprócz jedynki).  
Zadanie 3 
Sortujemy wszystko razem, jak napotkamy sie na poczatek +1, na koniec -1, maxymalna wartosc >m : return 0, else return 1
Nlogm rozwiazanie za pomoca kopca min: Wstawiamy departure time i bierzemy
Zadanie 4
Od 2k-1 идем назад и первую попавшуюся машину ставим и летим дальше
Zadanie 5
Dla każdego przedziału znajdujemy inny przedział, 
taki że nie zachodzą na siebie i różnica między początkiem pierwszego i końcem drugiego jest minimalna. 
Następnie próbujemy,  spacerować po tak znalezionych sąsiadach i sprawdzamy, czy udało nam się przejść k przedziałów.
Rozw:
1)	Первый элемент берем элемент с самым маленьким концом
2)	Удаляем все находящие на него
3)	Далее ему добираем элемент с которым koniec_tmp-pocz_el=min из всех
4)	Повторяем это пока не останется элементов при этом суммируя
5)	Если сумма >=k решение ок, нет 0


Zadanie 6:
Tab[26]=0
Tab[i]=1: if napotkalismy na litere
Wypisujemy litery idac po tablice
//UWAGA
class MyClass:
от польз. Jakub Adamczyk польз. все:
    x = None
от польз. Jakub Adamczyk польз. все:
cl = MyClass()
от польз. Jakub Adamczyk польз. все:
cl.y = 3

